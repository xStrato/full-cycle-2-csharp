// <auto-generated />
using System;
using MicroVideosCatalog.Infrastructure.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MicroVideosCatalog.API.Migrations
{
    [DbContext(typeof(VideoCatalogContext))]
    [Migration("20220101215535_InitialCreation")]
    partial class InitialCreation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("MicroVideosCatalog.Domain.Entities.CastMember", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("CastMemberType")
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("VideoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("VideoId");

                    b.ToTable("castMembers", "dbo");
                });

            modelBuilder.Entity("MicroVideosCatalog.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("GenreId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("VideoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.HasIndex("VideoId");

                    b.ToTable("categories", "dbo");
                });

            modelBuilder.Entity("MicroVideosCatalog.Domain.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("VideoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("VideoId");

                    b.ToTable("genres", "dbo");
                });

            modelBuilder.Entity("MicroVideosCatalog.Domain.Entities.Video", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<float>("Duration")
                        .HasMaxLength(10)
                        .HasColumnType("REAL");

                    b.Property<bool>("Opened")
                        .HasMaxLength(1)
                        .HasColumnType("INTEGER");

                    b.Property<string>("Rating")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<int>("YearLaunched")
                        .HasMaxLength(4)
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("videos", "dbo");
                });

            modelBuilder.Entity("MicroVideosCatalog.Domain.Entities.VideoFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<float>("Duration")
                        .HasMaxLength(10)
                        .HasColumnType("REAL");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("TEXT");

                    b.Property<string>("Url")
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("VideoId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("VideoId");

                    b.ToTable("videoFiles", "dbo");
                });

            modelBuilder.Entity("MicroVideosCatalog.Domain.Entities.CastMember", b =>
                {
                    b.HasOne("MicroVideosCatalog.Domain.Entities.Video", null)
                        .WithMany("CastMembers")
                        .HasForeignKey("VideoId");
                });

            modelBuilder.Entity("MicroVideosCatalog.Domain.Entities.Category", b =>
                {
                    b.HasOne("MicroVideosCatalog.Domain.Entities.Genre", null)
                        .WithMany("Categories")
                        .HasForeignKey("GenreId");

                    b.HasOne("MicroVideosCatalog.Domain.Entities.Video", null)
                        .WithMany("Categories")
                        .HasForeignKey("VideoId");
                });

            modelBuilder.Entity("MicroVideosCatalog.Domain.Entities.Genre", b =>
                {
                    b.HasOne("MicroVideosCatalog.Domain.Entities.Video", null)
                        .WithMany("Genres")
                        .HasForeignKey("VideoId");
                });

            modelBuilder.Entity("MicroVideosCatalog.Domain.Entities.VideoFile", b =>
                {
                    b.HasOne("MicroVideosCatalog.Domain.Entities.Video", null)
                        .WithMany("VideoFiles")
                        .HasForeignKey("VideoId");
                });

            modelBuilder.Entity("MicroVideosCatalog.Domain.Entities.Genre", b =>
                {
                    b.Navigation("Categories");
                });

            modelBuilder.Entity("MicroVideosCatalog.Domain.Entities.Video", b =>
                {
                    b.Navigation("CastMembers");

                    b.Navigation("Categories");

                    b.Navigation("Genres");

                    b.Navigation("VideoFiles");
                });
#pragma warning restore 612, 618
        }
    }
}
